{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "Airsonic",
      "name": "airsonic",
      "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/airsonic-logo.png",
      "image": "linuxserver/airsonic:latest",
      "categories": [
        "Music"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "container": "/music",
          "bind": "/portainer/Music"
        },
        {
          "container": "/playlists",
          "bind": "/portainer/AppData/Airsonic/Playlists"
        },
        {
          "container": "/podcasts",
          "bind": "/portainer/Podcasts"
        },
        {
          "container": "/media",
          "bind": "/portainer/AppData/Airsonic/Media"
        },
        {
          "container": "/config",
          "bind": "/portainer/AppData/Airsonic/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "CONTEXT_PATH",
          "label": "CONTEXT_PATH",
          "set": "airsonic"
        },
        {
          "name": "JAVA_OPTS",
          "label": "JAVA_OPTS",
          "set": "-Xms256m -Xmx512m"
        }
      ]
    },
    {
      "type": 1,
      "title": "Authelia",
      "name": "authelia",
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/authelia.png",
      "image": "authelia/authelia:latest",
      "note": "Requires a configuration.yml file in order to work. Documentation is Available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
      "categories": [
        "Other",
        "Tools",
        "Authentication"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "9091:9091/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/authelia/",
          "bind": "/portainer/AppData/Authelia/Config"
        }
      ],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]
    },
    {
      "type": 1,
      "title": "Bazarr",
      "name": "bazarr",
      "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bazarr.png",
      "image": "linuxserver/bazarr:latest",
      "categories": [
        "Video",
        "Music"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "6767:6767/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Bazarr/Config"
        },
        {
          "container": "/tv",
          "bind": "/portainer/TV"
        },
        {
          "container": "/movies",
          "bind": "/portainer/Movies"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]
    },
    {
      "type": 1,
      "title": "Beets",
      "name": "beets",
      "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/beets-icon.png",
      "image": "linuxserver/beets:latest",
      "categories": [
        "Music"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8337:8337/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Beets/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        },
        {
          "container": "/music",
          "bind": "/portainer/Music"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 3,
      "title": "Bitwarden Stack",
      "description": "Stack with bitwarden-rs container and an nightly backup routine.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "categories": [
        "Utilities"
      ],
      "platform": "linux",
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/bitwarden.yml"
      },
      "env": [
        {
          "name": "PORT",
          "label": "PORT",
          "default": "5430"
        },
        {
          "name": "CRON_TIME",
          "label": "CRON_TIME",
          "default": "0 5 * * *"
        },
        {
          "name": "UUID",
          "label": "UUID",
          "default": "1000"
        },
        {
          "name": "GID",
          "label": "GID",
          "default": "100"
        },
        {
          "name": "ADMIN_TOKEN",
          "label": "ADMIN_TOKEN",
          "default": "some_really_long_key"
        },
        {
          "name": "DOMAIN",
          "label": "DOMAIN",
          "default": "https://bw.domain.com"
        }
      ]
    },
    {
      "type": 1,
      "title": "Bitwarden RS",
      "name": "bitwarden",
      "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
      "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "image": "bitwardenrs/server:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "5430:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Bitwarden-rs/Config"
        },
        {
          "container": "/data",
          "bind": "/portainer/AppData/Bitwarden-rs/Data"
        }
      ],
      "env": [
        {
          "name": "ADMIN_TOKEN",
          "label": "ADMIN_TOKEN",
          "default": "some_really_long_key"
        },
        {
          "name": "DOMAIN",
          "label": "DOMAIN",
          "default": "https://bw.domain.com"
        }
      ]
    },
    {
      "type": 1,
      "title": "Bitwarden RS Backup",
      "name": "bitwarden_backup",
      "description": "A Docker container that backs up another bitwardenrs container's SQLite database.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "image": "bruceforce/bw_backup:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "restart_policy": "always",
      "platform": "linux",
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Bitwarden-rs/Config"
        },
        {
          "container": "/data",
          "bind": "/portainer/AppData/Bitwarden-rs/Data"
        },
        {
          "container": "/backup",
          "bind": "/portainer/AppData/Bitwarden-rs/DB-Backup"
        }
      ],
      "env": [
        {
          "name": "BACKUP_FILE",
          "label": "BACKUP_FILE",
          "default": "/backup/bitwarden.sqlite3"
        },
        {
          "name": "CRON_TIME",
          "label": "CRON_TIME",
          "default": "0 5 * * *"
        }
      ]
    },
    {
      "type": 1,
      "title": "Booksonic",
      "name": "booksonic",
      "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/booksonic.png",
      "image": "linuxserver/booksonic:latest",
      "categories": [
        "Books",
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "container": "/books",
          "bind": "/portainer/Books"
        },
        {
          "container": "/podcast",
          "bind": "/portainer/Podcasts"
        },
        {
          "container": "/config",
          "bind": "/portainer/AppData/Booksonic/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "CONTEXT_PATH",
          "label": "CONTEXT_PATH",
          "default": "booksonic"
        }
      ]
    },
    {
      "type": 3,
      "title": "Bookstack",
      "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bookstack2.png",
      "categories": [
        "Wiki"
      ],
      "note": "Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/bookstack.yml"
      },
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "https://bookstack.domain.com"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/London"
        },
        {
          "name": "DATABASE_PASSWORD",
          "label": "DATABASE_PASSWORD"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MYSQL_ROOT_PASSWORD"
        },
        {
          "name": "BS_VOLUME",
          "label": "BS_VOLUME",
          "default": "/portainer/AppData/Bookstack/Data"
        },
        {
          "name": "DB_VOLUME",
          "label": "DB_VOLUME",
          "default": "/portainer/AppData/Bookstack/DB"
        },
        {
          "name": "BACKUP_VOLUME",
          "label": "BACKUP_VOLUME",
          "default": "/portainer/AppData/Bookstack/DB_Backup"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "6875"
        }
      ]
    },
    {
      "type": 3,
      "title": "CodiMD",
      "name": "codimd",
      "description": "CodiMD lets you create realtime collaborative markdown notes on all platforms. Inspired by Hackpad, with more focus on speed and flexibility.",
      "categories": [
        "Wiki"
      ],
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/codimd.yml"
      },
      "env": [
        {
          "name": "MARIADB_VOLUME",
          "label": "MARIADB_VOLUME",
          "default": "/portainer/AppData/CodiMD/DB"
        },
        {
          "name": "CODIMD_VOLUME",
          "label": "CODIMD_COLUME",
          "default": "/portainer/AppData/CodiMD/Config"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/London"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD"
        },
        {
          "name": "ROOT_PASSWORD",
          "label": "ROOT_PASSWORD"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "3001"
        }
      ]
    },
    {
      "type": 1,
      "title": "Caddy",
      "description": "HTTP/2 web server with automatic HTTPS",
      "categories": [
        "webserver"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
      "image": "abiosoft/caddy:latest",
      "ports": [
        "80/tcp",
        "443/tcp",
        "2015/tcp"
      ],
      "volumes": [
        {
          "container": "/root/.caddy"
        }
      ]
    },
    {
      "type": 1,
      "title": "Cardigann",
      "name": "cardigann",
      "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cardigann.png",
      "image": "linuxserver/cardigann:latest",
      "categories": [
        "Downloaders"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "5060:5060/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Cardigann/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Chowdown",
      "name": "Chowdown",
      "description": "Save recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/chowdown.png",
      "image": "gregyankovoy/chowdown:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "4000:4000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Chowdown/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Code Server",
      "name": "code-server",
      "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/code-server.png",
      "image": "linuxserver/code-server:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8443:8443/tcp"
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "GUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "TZ",
          "label": "TZ"
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD"
        },
        {
          "name": "SUDO_PASSWORD",
          "label": "SUDO_PASSWORD"
        },
        {
          "name": "PROXY_DOMAIN",
          "label": "PROXY_DOMAIN",
          "default": "example.my.domain"
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Code-Server/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Codiad",
      "name": "codiad",
      "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.\n  ",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/codiad-icon.png",
      "image": "linuxserver/codiad:latest",
      "categories": [
        "Productivity"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Codiad/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "DashMachine",
      "name": "dashmachine",
      "description": "Another application bookmark dashboard, with fun features.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dashmachine_logo.png",
      "image": "rmountjoy/dashmachine:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "container": "/dashmachine/dashmachine/user_data",
          "bind": "/portainer/AppData/Dashmachine/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Davos",
      "name": "davos",
      "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/davos.png",
      "image": "linuxserver/davos:latest",
      "categories": [
        "FTP",
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Davos/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Dozzle",
      "name": "dozzle",
      "description": "Dozzle is a simple, lightweight application that provides you with a web based interface to monitor your Docker container logs live. It doesn’t store log information, it is for live monitoring of your container logs only.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dozzle.png",
      "image": "amir20/dozzle:latest",
      "categories": [
        "Other",
        "Tools",
        "Maintenance"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "Duck DNS",
      "name": "duckdns",
      "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/duckdns.png",
      "image": "linuxserver/duckdns:latest",
      "categories": [
        "DNS",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "env": [
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "set": ""
        },
        {
          "name": "TOKEN",
          "label": "TOKEN",
          "set": ""
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Duplicati",
      "name": "duplicati",
      "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/duplicati-icon.png",
      "image": "linuxserver/duplicati:latest",
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Productivity",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8200:8200/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Duplicati/Config"
        },
        {
          "container": "/tmp"
        },
        {
          "container": "/backups"
        },
        {
          "container": "/source"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Emby",
      "name": "emby",
      "description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/emby.png",
      "image": "linuxserver/emby:latest",
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Emby/Config"
        },
        {
          "container": "/data/tvshows",
          "bind": "/portainer/TV"
        },
        {
          "container": "/data/movies",
          "bind": "/portainer/Movies"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]
    },
    {
      "type": 1,
      "title": "EmbyStat",
      "name": "embystat",
      "description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/embystat.png",
      "image": "linuxserver/embystat:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "6555:6555/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/EmbyStat/Config"
        }
      ],
      "note": "Access the ui at your-ip:6555. Follow the setup wizard on initial install. Then configure the required services."
    },
    {
      "type": 1,
      "title": "FileBrowser",
      "name": "filebrowser",
      "description": "Web File Browser which can be used as a middleware or standalone app.",
      "note": "The default user and password is admin/admin.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/filebrowser.png",
      "image": "80x86/filebrowser:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8082:8082/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/FileBrowser/Config"
        },
        {
          "container": "/myfiles",
          "bind": "/portainer/AppData/FileBrowser/Data"
        }
      ]
    },
    {
      "type": 1,
      "title": "FreshRSS",
      "name": "freshrss",
      "description": "A free, self-hostable rss aggregator…",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/freshrss-icon.png",
      "image": "linuxserver/freshrss:latest",
      "categories": [
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/freshrss/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Gazee",
      "name": "gazee",
      "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/gazee-logo.png",
      "image": "linuxserver/gazee:latest",
      "categories": [
        "Web",
        "Books",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Gazee/Config"
        },
        {
          "container": "/comics",
          "bind": "/portainer/Comics"
        },
        {
          "container": "/mylar",
          "bind": "/portainer/AppData/Gazee/Mylar"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Gitlab CE",
      "description": "Open-source end-to-end software development platform",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
      "categories": [
        "development",
        "project-management"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": [
        "80/tcp",
        "443/tcp",
        "22/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ]
    },
    {
      "type": 1,
      "title": "Guacamole",
      "name": "guacamole",
      "description": "A clientless remote desktop gateway.",
      "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/guacamole.png",
      "image": "oznu/guacamole:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Guacamole/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "HTPC Manager",
      "name": "htpcmanager",
      "description": "HTPC Manaager, a front end for many htpc related applications. Hellowlol version.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/htpcmanager-icon.png",
      "image": "linuxserver/htpcmanager:latest",
      "categories": [
        "Video",
        "Music",
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8085:8085/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/HTPCmanager/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Heimdall",
      "name": "heimdall",
      "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/heimdall-icon.png",
      "image": "linuxserver/heimdall:latest",
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Heimdall/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Huginn",
      "name": "huginn",
      "description": "Create agents that monitor and act on your behalf.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/huginn.png",
      "image": "huginn/huginn:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/mysql",
          "bind": "/portainer/AppData/huginn/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jackett",
      "name": "jackett",
      "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jacket-icon.png",
      "image": "linuxserver/jackett:latest",
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "9117:9117/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Jackett/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "XTeVe",
      "name": "XTeVe",
      "description": "XTeVe",
      "logo": "https://avatars.githubusercontent.com/u/53275662?v=4",
      "image": "dnsforge/xteve",
      "categories": [
        "Video"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "34400:34400/tcp"
      ],
      "volumes": [
        {
          "container": "/home/xteve/conf",
          "bind": "/portainer/AppData/xteve"
        },
        {
          "container": "/tmp/xteve",
          "bind": "/portainer/AppData/xteve/temp"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]

    },
    {
      "type": 1,
      "title": "Jellyfin",
      "name": "jellyfin",
      "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jellyfin.png",
      "image": "linuxserver/jellyfin:latest",
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Jelllyfin/Config"
        },
        {
          "container": "/data/tvshows",
          "bind": "/portainer/TV"
        },
        {
          "container": "/data/movies",
          "bind": "/portainer/Movies"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": [
        "continuous-integration"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts",
      "ports": [
        "8080/tcp",
        "50000/tcp"
      ],
      "env": [
        {
          "name": "JENKINS_OPTS",
          "label": "Jenkins options"
        }
      ],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jupyter Notebook",
      "name": "jupyter",
      "description": "Jupyter scipy notebook, containing Numpy and Pandas for data science / data analsis purposes.",
      "image": "jupyter/scipy-notebook",
      "categories": [
        "Data Science"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "10000:8888/tcp"
      ],
      "volumes": [
        {
          "container": "/home/jovyan/"
        }
      ],
      "env": [
        {
          "name": "NB_UID",
          "label": "NB_UID",
          "default": "1000"
        },
        {
          "name": "NB_GID",
          "label": "NB_GID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Kodi Headless",
      "name": "kodi-headless",
      "description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/kodi-icon.png",
      "image": "linuxserver/kodi-headless:latest",
      "categories": [
        "Video"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080/tcp",
        "9777/udp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Kodi/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Let's Encrypt",
      "name": "letsencrypt",
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/letsencrypt.png",
      "image": "linuxserver/letsencrypt:latest",
      "categories": [
        "Tools",
        "Web"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Config/LetsEncrypt"
        }
      ],
      "env": [
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "name": "URL",
          "label": "URL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "set": "www,"
        },
        {
          "name": "ONLY_SUBDOMAINS",
          "label": "ONLY_SUBDOMAINS",
          "set": "false"
        },
        {
          "name": "DHLEVEL",
          "label": "DHLEVEL",
          "set": "2048"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "set": "http"
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "set": "http"
        }
      ]
    },
    {
      "type": 3,
      "title": "MariaDB Backups",
      "name": "mariadb_backup",
      "description": "Periodically backup a MariaDB/MySQL database",
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "platform": "linux",
      "repository": {
        "url": "https://github.com/andyyanguk/portainer_templates",
        "stackfile": "stacks/periodic-mariadb-backup.yml"
      },
      "env": [
        {
          "name": "CONTAINER_NAME",
          "label": "Backup Container Name",
          "default": "MariaDB Backup"
        },
        {
          "name": "MYSQL_CONTAINER",
          "label": "MySQL Container Name",
          "description": "Enter the Docker container name for the database to backup."
        },
        {
          "name": "MYSQL_DATABASE",
          "label": "MySQL Database Name",
          "description": "Enter the name of the database to backup."
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MySQL Root Password",
          "description": "enter the root password of the MySQL database."
        },
        {
          "name": "BACKUP_VOLUME",
          "label": "Backup Location",
          "default": "/portainer/AppData/APPNAME/DB_Backup"
        },
        {
          "name": "NETWORK",
          "label": "Network Name",
          "default": "bridge"
        }
      ]
    },
    {
      "type": 3,
      "title": "Matomo",
      "name": "matomo",
      "description": "Analytics tool",
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "platform": "linux",
      "repository": {
        "url": "https://github.com/andyyanguk/portainer_templates",
        "stackfile": "stacks/matomo.yml"
      },
      "env": [
        {
          "name": "DB_VOLUME",
          "label": "DB Volume",
          "default": "/portainer/AppData/Matomo/DB"
        },
        {
          "name": "MATOMO_VOLUME",
          "label": "Matomo Volume",
          "default": "/portainer/AppData/Matomo/App"
        },
        {
          "name": "PORT",
          "label": "Port",
          "default": "8088"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MySQL Root Pass"
        },
        {
          "name": "MYSQL_PASSWORD",
          "label": "MySQL Pass"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": [
        "marketing"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "categories": [
        "storage"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "minio/minio:latest",
      "ports": [
        "9000/tcp"
      ],
      "env": [
        {
          "name": "MINIO_ACCESS_KEY",
          "label": "Minio access key"
        },
        {
          "name": "MINIO_SECRET_KEY",
          "label": "Minio secret key"
        }
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "command": "server /data"
    },
    {
      "type": 1,
      "title": "Mstream",
      "name": "mstream",
      "description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone..",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mstream.png",
      "image": "linuxserver/mstream:latest",
      "categories": [
        "Other",
        "Music"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Config/Mstream"
        },
        {
          "container": "/music",
          "bind": "/portainer/Music"
        }
      ]
    },
    {
      "type": 1,
      "title": "MusicBrainz",
      "name": "musicbrainz",
      "description": " MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/musicbrainz-icon.png",
      "image": "linuxserver/musicbrainz:latest",
      "categories": [
        "Music",
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Config/MusicBrainz"
        },
        {
          "container": "/data",
          "bind": "/portainer/AppData/MusicBrainz"
        }
      ],
      "env": [
        {
          "name": "BRAINZCODE",
          "label": "BRAINZCODE",
          "set": ""
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Muximux",
      "name": "muximux",
      "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/muximux-icon.png",
      "image": "linuxserver/muximux:latest",
      "categories": [
        "Web",
        "Proxy",
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Muximux/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mylar",
      "name": "mylar",
      "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mylar-icon.png",
      "image": "linuxserver/mylar:latest",
      "categories": [
        "Downloaders",
        "Books"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8090:8090/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Mylar/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        },
        {
          "container": "/comics",
          "bind": "/portainer/Comics"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "NZBGet",
      "name": "nzbget",
      "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nzbget-icon.png",
      "image": "linuxserver/nzbget:latest",
      "categories": [
        "Downloaders"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "6789:6789/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Nzbget/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "NZBHydra 2",
      "name": "nzbhydra2",
      "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/hydra-icon.png",
      "image": "linuxserver/nzbhydra2:latest",
      "categories": [
        "Downloaders",
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "5076:5076/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Nzbhydra2/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 3,
      "title": "Nextcloud",
      "name": "nextcloud",
      "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nextcloud-icon.png",
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/andyyanguk/portainer_templates",
        "stackfile": "stacks/nextcloud.yml"
      },
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        },
        {
          "name": "DATABASE_PASSWORD",
          "label": "DATABASE_PASSWORD"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MYSQL_ROOT_PASSWORD"
        },
        {
          "name": "PORT",
          "label": "PORT"
        }
      ]
    },
    {
      "type": 1,
      "title": "Nginx",
      "name": "nginx",
      "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nginx-icon.png",
      "image": "linuxserver/nginx:latest",
      "categories": [
        "Web",
        "Proxy"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Nginx/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Nginx Proxy Manager",
      "name": "nginx-proxy-manager",
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt. Default user: admin@example.com / Default password: changeme",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/proxy_mgr.png",
      "image": "jlesage/nginx-proxy-manager",
      "categories": [
        "Proxy",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80:8080/tcp",
        "81:8181/tcp",
        "443:4443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Nginx-Proxy/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "OScam",
      "name": "oscam",
      "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
      "logo": "https://i.imgur.com/8LadrLg.png",
      "image": "linuxserver/oscam:latest",
      "categories": [
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8888:8888/tcp",
        "10000:10000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/OScam/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Odoo",
      "description": "Open-source business apps",
      "categories": [
        "project-management"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/odoo.png",
      "image": "odoo:latest",
      "env": [
        {
          "name": "HOST",
          "label": "PostgreSQL database host",
          "type": "container"
        },
        {
          "name": "USER",
          "label": "Database user"
        },
        {
          "name": "PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "8069/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/odoo"
        },
        {
          "container": "/mnt/extra-addons"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ombi",
      "name": "ombi",
      "description": "Ombi allows you to host your own Plex Request and user management system. ",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ombi.png",
      "image": "linuxserver/ombi:latest",
      "categories": [
        "Downloaders",
        "Other",
        "Video",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "3579:3579/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Ombi/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "OpenVPN Access Server",
      "name": "openvpn-as",
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/openvpn-as-icon.png",
      "image": "linuxserver/openvpn-as:latest",
      "categories": [
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "943:943/tcp",
        "9443:9443/tcp",
        "1194:1194/udp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/OpenVPN-AS/Config"
        }
      ],
      "env": [
        {
          "name": "INTERFACE",
          "label": "INTERFACE",
          "set": "eth0"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Organizr v2",
      "name": "organizr-v2",
      "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/organizr-icon.png",
      "image": "organizrtools/organizr-v2:php-fpm",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Organizr/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "phpmyadmin",
      "name": "phpmyadmin",
      "image": "phpmyadmin/phpmyadmin",
      "description": "Use this to control your MySQL/MariaDB database.",
      "categories": [
        "Database"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "note": "Make sure to select the correct network!",
      "ports": [
        "80/tcp"
      ],
      "env": [
        {
          "name": "PMA_HOST",
          "label": "Database Host"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root Password"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pi-Hole",
      "name": "pihole",
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pihole.png",
      "image": "pihole/pihole:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "4443:443/tcp"
      ],
      "env": [
        {
          "name": "WEBPASSWORD",
          "label": "WEBPASSWORD",
          "default": "^y6yL5LY*4go^o"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/London"
        }       
      ],
      "volumes": [
        {
          "container": "/etc/pihole",
          "bind": "/portainer/AppData/PiHole/Config"
        },
        {
          "container": "/etc/dnsmasq.d",
          "bind": "/portainer/AppData/PiHole/Config/DNS"
        }
      ],
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53."
    },
    {
      "type": 1,
      "title": "Plex",
      "name": "plex",
      "description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/plex-icon.png",
      "image": "linuxserver/plex:latest",
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "network": "host",
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Plex/Config"
        },
        {
          "container": "/tv",
          "bind": "/portainer/TV"
        },
        {
          "container": "/movies",
          "bind": "/portainer/Movies"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "VERSION",
          "label": "VERSION",
          "set": "latest"
        }
      ]
    },
    {
      "type": 1,
      "title": "Plex Requests",
      "name": "plexrequests",
      "description": "Simple automated way for users to request new content for Plex.",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
      "image": "linuxserver/plexrequests:latest",
      "categories": [
        "Downloaders",
        "Other",
        "Video",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/PlexRequests/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "URL_BASE",
          "label": "URL_BASE",
          "set": ""
        }
      ]
    },
    {
      "type": 3,
      "title": "ProjectSend",
      "name": "projectsend",
      "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!\n  ",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/projectsend-logo.png",
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "note": "Username and password to the database will be projectsend. Host can be found in the mariadb-projectsend container",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/andyyanguk/portainer_templates",
        "stackfile": "stacks/projectsend.yml"
      },
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "MAX_UPLOAD",
          "label": "MAX_UPLOAD",
          "default": "5000"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "8918"
        }
      ]
    },
    {
      "type": 1,
      "title": "ProtonMail Bridge",
      "name": "protonmail-bridge",
      "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
      "note": "Please refer to the documentation <a href='https://hub.docker.com/r/shenxn/protonmail-bridge'/>here</a> to set this up.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/protonmail-bridge.png",
      "image": "shenxn/protonmail-bridge:latest",
      "categories": [
        "Email",
        "Productivity",
        "Tools",
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "143/tcp",
        "25/tcp"
      ],
      "volumes": [
        {
          "container": "/root",
          "bind": "/portainer/AppData/ProtonMail-Bridge"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pydio",
      "name": "pydio",
      "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pydio-icon.png",
      "image": "linuxserver/pydio:latest",
      "categories": [
        "Cloud",
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Pydio/Config"
        },
        {
          "container": "/data",
          "bind": "/portainer/AppData/Pydio/Data"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Quassel IRC",
      "name": "quassel-core",
      "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/quassel-core-icon.png",
      "image": "linuxserver/quassel-core:latest",
      "categories": [
        "Messenger"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "4242:4242/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Quassel/Config-core"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Radarr",
      "name": "radarr",
      "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/radarr.png",
      "image": "linuxserver/radarr:latest",
      "categories": [
        "Downloaders",
        "Video"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "7878:7878/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Radarr/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        },
        {
          "container": "/movies",
          "bind": "/portainer/Movies"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Reactive-Resume",
      "name": "reactive-resume",
      "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/reactiveresume.png",
      "image": "amruthpillai/reactive-resume:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/src/app",
          "bind": "/portainer/AppData/ReactiveResume/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redmine",
      "description": "Open-source project management tool",
      "categories": [
        "project-management"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
      "image": "redmine:latest",
      "ports": [
        "3000/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/src/redmine/files"
        }
      ]
    },
    {
      "type": 1,
      "title": "SABnzbd",
      "name": "sabnzbd",
      "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sabnzbd-icon.png",
      "image": "linuxserver/sabnzbd:latest",
      "categories": [
        "Downloaders"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080:8080/tcp",
        "9090:9090/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Sabnzbd/Config"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        },
        {
          "container": "/incomplete-downloads",
          "bind": "/portainer/Downloads/incomplete"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "title": "Seafile",
      "type": 1,
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "platform": "linux",
      "image": "seafileltd/seafile:latest",
      "ports": [
        "8313:80/tcp"
      ],
      "env": [
        {
          "name": "SEAFILE_SERVER_HOSTNAME",
          "label": "Server URL",
          "default": "seafile.domain.com"
        },
        {
          "name": "SEAFILE_ADMIN_EMAIL",
          "label": "Admin Email",
          "default": "admin@domain.com"
        },
        {
          "name": "SEAFILE_ADMIN_PASSWORD",
          "label": "Admin Password",
          "default": "super_secret_password"
        }
      ],
      "volumes": [
        {
          "container": "/shared",
          "bind": "/home/andy/Seafile"
        }
      ]
    },
    {
      "type": 1,
      "title": "Shiori",
      "name": "shiori",
      "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
      "logo": "https://raw.githubusercontent.com/selfhosted_pro/selfhosted_templates/master/Images/shiori-icon.png",
      "image": "radhifadlillah/shiori:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "container": "/srv/shiori",
          "bind": "/portainer/AppData/Shiori/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Snibox",
      "name": "snibox",
      "description": "Self-hosted snippet manager.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/snibox.png",
      "image": "snowmean/snibox-sqlite:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "3010:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/app/db/database",
          "bind": "/portainer/AppData/Snibox/Config"
        }
      ],
      "note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text."
    },
    {
      "type": 1,
      "title": "Sonarr",
      "name": "sonarr",
      "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sonarr-icon.png",
      "image": "linuxserver/sonarr:latest",
      "categories": [
        "Downloaders",
        "Video"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8989:8989/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Sonarr/Config"
        },
        {
          "container": "/dev/rtc",
          "bind": "/dev/rtc"
        },
        {
          "container": "/tv",
          "bind": "/portainer/TV"
        },
        {
          "container": "/downloads",
          "bind": "/portainer/Downloads"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Tautulli",
      "name": "tautulli",
      "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.[br][br]\r\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\r\n  [b]8181[/b] The webui for Tautulli's webui [br]\r\n  [b]/config[/b] Storing Configuration and the Tautulli database[br]\r\n[b]/logs[/b] Map to you plex logs (required for IP logging)[br]\r\n\r\n",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tautulli-icon.png",
      "image": "linuxserver/tautulli:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8181:8181/tcp"
      ],
      "volumes": [
        {
          "container": "/logs",
          "bind": "/portainer/Logs"
        },
        {
          "container": "/config",
          "bind": "/portainer/AppData/Tautulli/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "TiddlyWiki",
      "name": "tiddlywiki",
      "description": "A unique, non-linear notebook wiki.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tiddlywiki.png",
      "image": "mazzolino/tiddlywiki:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/tiddlywiki",
          "bind": "/portainer/AppData/TiddlyWiki/Config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Tiny Tiny RSS",
      "name": "tt-rss",
      "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tt-rss-icon.png",
      "image": "lunik1/tt-rss:latest",
      "categories": [
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/tt-rss/Config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ubooquity",
      "name": "ubooquity",
      "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ubooquity-icon.png",
      "image": "linuxserver/ubooquity:latest",
      "categories": [
        "Cloud",
        "Books"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "2202:2202/tcp",
        "2203:2203/tcp"
      ],
      "volumes": [
        {
          "container": "/books",
          "bind": "/portainer/Books"
        },
        {
          "container": "/comics",
          "bind": "/portainer/Comics"
        },
        {
          "container": "/config",
          "bind": "/portainer/AppData/Ubookquity/Config"
        }
      ],
      "env": [
        {
          "name": "MAXMEM",
          "label": "MAXMEM",
          "set": "512"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Urbackup",
      "description": "Open-source network backup",
      "categories": [
        "backup"
      ],
      "platform": "linux",
      "note": "This application web interface is exposed on the port 55414 inside the container.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
      "image": "cfstras/urbackup",
      "ports": [
        "55413/tcp",
        "55414/tcp",
        "55415/tcp",
        "35622/tcp"
      ],
      "volumes": [
        {
          "container": "/var/urbackup"
        }
      ]
    },
    {
      "type": 1,
      "title": "Wallabag + SQlite",
      "name": "wallabag",
      "description": "wallabag is a self hostable application for saving web pages. With this application you will not miss content anymore. Click, save, read it when you want. It saves the content you select so that you can read it when you have time.",
      "image": "wallabag/wallabag",
      "note": "TESTING - This template uses SQLite only. Default user & pass = wallabag",
      "categories": [
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/var/www/wallabag/data"
        },
        {
          "container": "/var/www/wallabag/web/assets/images"
        }
      ],
      "ports": [
        "9841:80/tcp"
      ],
      "env": [
        {
          "name": "SYMFONY__ENV__DOMAIN_NAME",
          "label": "Domain Name",
          "default": "https://wallabag.yourdomain.com"
        }
      ]
    },
    {
      "type": 1,
      "title": "Watchtower",
      "name": "watchtower",
      "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/watchtower.png",
      "image": "containrrr/watchtower:latest",
      "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
      "categories": [
        "Other",
        "Tools",
        "Maintenance"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "WebGrab+Plus",
      "name": "webgrabplus",
      "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.[br]\r\n  Optional postprocessors to add IMDb data or to customize your xmltv listing.[br]\r\n  http://www.webgrabplus.com/[br]\r\n  [b][span style='color: #E80000;']Directions:[/span][/b][br]\r\n  [b]/config[/b] : This is where WebGrab+Plus will store it's configuration.[br][br]\r\n  [b]/data[/b] : This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.[br][br]",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/webgrabplus.png",
      "image": "linuxserver/webgrabplus:latest",
      "categories": [
        "Downloaders"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/WebGrabPlus/Config"
        },
        {
          "container": "/data",
          "bind": "/portainer/AppData/WebGrabPlus/Data"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "YouTubeDL-Material",
      "name": "youtubedl-material",
      "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ytdlm.png",
      "image": "tzahi12345/youtubedl-material:latest",
      "categories": [
        "Other",
        "Downloaders"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "17442:17442/tcp"
      ],
      "volumes": [
        {
          "container": "/app/appdata",
          "bind": "/portainer/AppData/YTDLM/Config"
        },
        {
          "container": "/app/video",
          "bind": "/portainer/AppData/Youtube/Video"
        },
        {
          "container": "/app/subscriptions",
          "bind": "/portainer/AppData/Youtube/Subscriptions"
        },
        {
          "container": "/app/users",
          "bind": "/portainer/AppData/Youtube/Users"
        },
        {
          "container": "/app/audio",
          "bind": "/portainer/AppData/Youtube/Audio"
        }
      ]
    },
    {
        "categories": ["Dashboard Server"],
        "description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
        "image": "selfhostedpro/yacht:latest",
        "logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
        "name": "yacht",
        "platform": "linux",
        "ports": ["8001:8000/tcp"],
        "restart_policy": "unless-stopped",
        "title": "Yacht",
        "type": 1,
        "volumes": [
          {
            "bind": "yacht",
            "container": "/config"
          },
          {
            "bind": "/var/run/docker.sock",
            "container": "/var/run/docker.sock"
          }
        ]
    },
    {
        "categories": [
            "database"
        ],
        "description": "The most advanced open-source database",
        "env": [{
                "label": "Superuser",
                "name": "POSTGRES_USER"
            },
            {
                "label": "Superuser password",
                "name": "POSTGRES_PASSWORD"
            }
        ],
        "image": "postgres:latest",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
        "platform": "linux",
        "ports": [
            "5432/tcp"
        ],
        "title": "PostgreSQL",
        "type": 1,
        "volumes": [{
            "container": "/var/lib/postgresql/data"
        }]
    }
  ]
}
